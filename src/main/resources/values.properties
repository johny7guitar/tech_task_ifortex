service.book.query.statistic.genre=genre_unnest
service.book.query.statistic.count=count
service.book.query.statistic=select unnest(genre) as ${service.book.query.statistic.genre}, count(*)\
  \ from books as ${service.book.query.statistic.count}  \
  group by ${service.book.query.statistic.genre} \
  order by ${service.book.query.statistic.count} desc

service.book.query.author=author
service.book.query.title=title
service.book.query.description=description
service.book.query.genre=genre
service.book.query.year=publication_date
service.book.query.date_format=YYYY-MM-DD

service.book.query.members=members
service.book.query.books=books
service.book.query.member_books=member_books
service.book.query.publication_date=publication_date
service.book.query.book_id=book_id
service.book.query.member_id=member_id
service.book.query.membership_date=membership_date

service.book.query.romance_lover=select * from ${service.book.query.members} \
  where ${service.book.query.membership_date} = ( select max(${service.book.query.membership_date}) \
  from ${service.book.query.books} b join ${service.book.query.member_books} bm on b.id = bm.${service.book.query.book_id} \
  join ${service.book.query.members} m on m.id = bm.${service.book.query.member_id} \
  where ${service.book.query.publication_date} = ( select min(${service.book.query.publication_date}) \
  from ${service.book.query.books} where 'romance' \
  ilike any(${service.book.query.genre})));